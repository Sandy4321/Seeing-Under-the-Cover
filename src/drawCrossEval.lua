---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Shuangjun Liu.
--- DateTime: 5/18/2018 7:38 PM
---
--- this is for multiple prediction evaluation tasks. It perform cross dataset evaluation
--- the ds list follow format <DS_nm>/<expID>
require 'paths'
require 'hdf5'
require 'os'
paths.dofile('util/eval.lua')    -- equals eval in train
paths.dofile('util/img.lua')
paths.dofile('ref.lua')        -- ds information

--local cmd = torch.CmdLine()
--cmd:text()
--cmd:text(' ---------- General options ------------------------------------')
--cmd:text()
--cmd:option('-evalNm', 'ts1',        'the evaluation drawing name')
--local opt = cmd:parse(arg)
-- for AR computer
--local exFd= '/home/jun/exp/pose-hg-train'   -- exFd   set from opt
--local exFd = '/home/jun/SDrive/rst_model/pose-hg-train/eval'
--local dsNm = 'AC2d'     -- dsNm
--local dsNm = 'MPI'    -- use opt to set this one

-- choose the right suffix to plot
--local angSfx = '_45'
--local angSfx = ''

-- for the gs
--local tsLs = {
--    --'umich-stacked-hourglass_GPM_MPI'
--    'GPM_ds/umich-stacked-hourglass_GPM7_MPI_100',
--    'GPM_ds/umich-stacked-hourglass_GPM7_SURREAL_100',
--    --'GPM_ds/umich-stacked-hourglass_GPM6_MPI_100',
--    --'GPM_ds/umich-stacked-hourglass_GPM6_SURREAL_100',
--    'MPI/umich-stacked-hourglass_ts1_dsp_PCK_it100',
--    'SURREAL/umich-stacked-hourglass_iter_100_dsp'
--}
--local legends = {
--    --'hg-GPM-MPI'
--    'GPM-MPII',          -- get rid of the -L1DC suffix
--    'GPM-SURREAL',
--    --'GPM-MPI-L1',
--    --'GPM-SURREAL-L1',
--    'MPII',
--    'SURREAL'
--}

-- for sjl
--local tsLs = {
--    'AC2d/RR_SJL9_wo-gridDshirt-grayD_A00_sjl_A00_spec',
--    'AC2d/RR_SJL9_wo-gridDshirt-grayD_A00_gauFt_sjl_spec_gauFt',
--    'AC2d/RR_SJL9_wo-gridDshirt-grayD_A00_wns_sjl_A00_spec_wns',
--    'AC2d/SURREAL_10000_sjl_A00_spec',
--    'AC2d/umich-stacked-hourglass_sjl_spec'
--}
--local legends = {
--    'ScanAva',
--    'ScanAva-gauss',
--    'ScanAva-wn',
--    'SURREAL',
--    'HG-pretrained'
--}

-- for A35 and A00 gauFt
--local tsLs = {
--    'AC2d/RR_P7_15_A00_gauFt_A00_gauFt',
--    'AC2d/RR_P7_15_A00_gauFt_A35_gauFt',
--    'AC2d/RR_P7_15_A35_gauFt_A00_gauFt',
--    'AC2d/RR_P7_15_A35_gauFt_A35_gauFt',
--}
--local legends = {
--    'A00-A00',
--    'A00-A35',
--    'A35-A00',
--    'A35-A35'
--}

-- for A00 different effect
--local tsLs = {
--    'AC2d/RR_P7_15_A00_A00',
--    'AC2d/RR_P7_15_A00_gauFt_A00_gauFt',
--    'AC2d/RR_P7_15_A00_wns_A00_wns',
--    'AC2d/SURREAL_10000_A00',
--    'AC2d/umich-stacked-hourglass_A00'
--}
--local legends = {
--    'ScanAva',
--    'ScanAva-gauss',
--    'ScanAva-wn',
--    'SURREAL',
--    'HG-pretrained'
--}
--local strStyles = {
--    'lw 5 pt 1',
--    'lw 5 pt 2',
--
--
--}

----- for IR pose estimation comparing state of the art
---- for sim all cover
--opt.evalNm = 'simLab_covs_ftLast'      -- show performance over cover conditions
--local tsLs = {
--    'datasetPM/simLab/umich-stacked-hourglass-ftLast--cov-u12_cov-u',
--    'datasetPM/simLab/umich-stacked-hourglass-ftLast--cov-u12_cov-1',
--    'datasetPM/simLab/umich-stacked-hourglass-ftLast--cov-u12_cov-2',
--    'datasetPM/simLab/umich-stacked-hourglass-ftLast--cov-u12_cov-u12',
--    'datasetPM/simLab/umich-stacked-hourglass_cov-u12',
--    'datasetPM/simLab/umich-stacked-hourglass_covRGB-u12',
--}
--local legends = {
--    'simLab-uncover',
--    'simLab-cover1',
--    'simLab-cover2',
--    'simLab-allCover',
--    'hg-LWIR',
--    'hg-RGB',
--}

-- for sim all cover with RGB cover cases
--opt.evalNm = 'simLab_covs_ftLast'      -- show performance over cover conditions
--local tsLs = {
--    'datasetPM/simLab/umich-stacked-hourglass-ftLast--cov-u12_cov-u',
--    'datasetPM/simLab/umich-stacked-hourglass-ftLast--cov-u12_cov-1',
--    'datasetPM/simLab/umich-stacked-hourglass-ftLast--cov-u12_cov-2',
--    'datasetPM/simLab/umich-stacked-hourglass-ftLast--cov-u12_cov-u12',
--    'datasetPM/simLab/umich-stacked-hourglass_covRGB-u',
--    'datasetPM/simLab/umich-stacked-hourglass_covRGB-1',
--    'datasetPM/simLab/umich-stacked-hourglass_covRGB-2',
--    'datasetPM/simLab/umich-stacked-hourglass_covRGB-u12',
--    'datasetPM/simLab/umich-stacked-hourglass_cov-u12',
--}
--local legends = {
--    'hg(UCITD)-uncover',
--    'hg(UCITD)-cover1',
--    'hg(UCITD)-cover2',
--    'hg(UCITD)-allCover',
--    'hg-RGBuncover',
--    'hg-RGBcover1',
--    'hg-RGBcover2',
--    'hg-RGB',
--    'hg-LWIR',
--    }
-- dana all cover cases
--opt.evalNm = 'danaLab_covs_ftLast'      -- show performance over cover conditions
--local tsLs = {
--    'datasetPM/danaLab/umich-stacked-hourglass-ftLast--cov-u12_cov-u',
--    'datasetPM/danaLab/umich-stacked-hourglass-ftLast--cov-u12_cov-1',
--    'datasetPM/danaLab/umich-stacked-hourglass-ftLast--cov-u12_cov-2',
--    'datasetPM/danaLab/umich-stacked-hourglass-ftLast--cov-u12_cov-u12',
--    'datasetPM/danaLab/umich-stacked-hourglass_covRGB-u',
--    'datasetPM/danaLab/umich-stacked-hourglass_covRGB-1',
--    'datasetPM/danaLab/umich-stacked-hourglass_covRGB-2',
--    'datasetPM/danaLab/umich-stacked-hourglass_covRGB-u12',
--    'datasetPM/danaLab/umich-stacked-hourglass_cov-u12',
--}
--
--local legends = {
--    'hg(UCITD)-uncover',
--    'hg(UCITD)-cover1',
--    'hg(UCITD)-cover2',
--    'hg(UCITD)-allCover',
--    'hg-RGBuncover',
--    'hg-RGBcover1',
--    'hg-RGBcover2',
--    'hg-RGB',
--    'hg-LWIR',
--    }
-- dana spec cover cases
opt.evalNm = 'danaLab_covs_ftLast'      -- show performance over cover conditions
local tsLs = {
    --'datasetPM/danaLab/umich-stacked-hourglass-ftLast--cov-u12_cov-u',
    --'datasetPM/danaLab/umich-stacked-hourglass-ftLast--cov-u12_cov-1',
    --'datasetPM/danaLab/umich-stacked-hourglass-ftLast--cov-u12_cov-2',
    'datasetPM/danaLab/umich-stacked-hourglass-ftLast--cov-u12_cov-u12',
    --'datasetPM/danaLab/umich-stacked-hourglass_covRGB-u',
    --'datasetPM/danaLab/umich-stacked-hourglass_covRGB-1',
    --'datasetPM/danaLab/umich-stacked-hourglass_covRGB-2',
    'datasetPM/danaLab/umich-stacked-hourglass_covRGB-u12',
    'datasetPM/danaLab/umich-stacked-hourglass_cov-u12',
}

local legends = {
    --'hg(UCITD)-uncover',
    --'hg(UCITD)-cover1',
    --'hg(UCITD)-cover2',
    'hg(UCITD)-allCover',
    --'hg-RGBuncover',
    --'hg-RGBcover1',
    --'hg-RGBcover2',
    'hg-RGB',
    'hg-LWIR',
    }

-- PMcross
--opt.evalNm = 'PMcross_ftLast'      -- show performance over cover conditions
--local tsLs = {
--    'datasetPM/simLab/umich-stacked-hourglass-ftLast--cov-u12_cov-u12',
--    'datasetPM/danaLab/umich-stacked-hourglass-ftLast--cov-u12_cov-u12',
--    'datasetPM/simLab/umich-stacked-hourglass_cov-u12',
--    'datasetPM/simLab/umich-stacked-hourglass_covRGB-u12',
--}
--local legends = {
--    'simLab-allCover',
--    'housing-allCover',
--    'preHg-allCover',
--    'preHg-RGB',
--}

local dists = {}
local ifSvIm = true
--local evalFd = '/home/jun/exp/pose-hg-train/eval'
local evalFd = '/home/jun/SDrive/rst_model/pose-hg-train/eval'
os.execute('mkdir -p ' .. evalFd)   -- try safely make dir
--local evalNm = 'state_of_art'
--local evalNm = 'GPM_ds_100'
--local evalNm = opt.evalNm
local evalSpecFd
if ifSvIm then
    evalSpecFd = paths.concat(evalFd, opt.evalNm)
    os.execute('mkdir -p ' .. evalSpecFd)
else
    evalSpecFd = nil
end


for i = 1, #tsLs  do
    local predPth = paths.concat(opt.expDir,tsLs[i],'final_preds.h5')
    local predFile = hdf5.open(predPth)
    --print(predFile)
    -- DB, list all the fields
    --print('the content in the hdf5 file is')
    --for k,v in pairs(predFile:all()) do print(k,'\n') end
    local preds = predFile:read('preds'):all()
    --local joints_gt = predFile:read('joints_gt'):all()
    local lenTorsos = predFile:read('lenTorsos'):all()
    local idxs = predFile:read('idxs'):all()
    local joints_gt = predFile:read('joints_gt'):all()  -- jonits_gt already in there?
    --print('idx 20 is', idxs:sub(1,20))
    --print('idxs max and min are', idxs:max(), idxs:min())
    --print('idxs size is', idxs:size())
    --print('the joints gt size is', dataset.joints_gt:size())
    --print('current index i is', i)
    --local joints_gt = dataset.joints_gt:index(1,idxs:long()):clone()   -- this one only works for same DS, cross domain, this joints_gt should be saved

    --print('joints_gt size is', joints_gt:size())
    --print('size of data is', preds:size(),joints_gt:size(), lenTorsos:size())
    -- 83 x16 x 5 for preds cut first 2
    --print('the index is', idxs)
    --print('joints_gt is', )
    table.insert(dists,calcDists(preds:narrow(3,1,2),joints_gt,lenTorsos))
    -- 16 x N
end

require 'gnuplot'
--gnuplot.raw('set terminal postscript noenhanced')
gnuplot.figure(1)
gnuplot.raw('set bmargin 1')
gnuplot.raw('set lmargin 3.2')
gnuplot.raw('set rmargin 2')

gnuplot.raw('set multiplot layout 2,3 title "AClab 2d PCK"')
gnuplot.raw('set xtics font ",6"')
gnuplot.raw('set ytics font ",6"')
displayPCK(dists, {9,10}, legends, 'Head',evalSpecFd, true, 4)   -- show key means the legend,  multiple plot, how to change subplot?
displayPCK(dists, {2,5}, legends, 'Knee',evalSpecFd, false, 4)
displayPCK(dists, {1,6}, legends, 'Ankle',evalSpecFd, false, 4)
gnuplot.raw('set tmargin 2.5')
gnuplot.raw('set bmargin 1.5')
displayPCK(dists, {13,14}, legends, 'Shoulder',evalSpecFd, false, 4)
displayPCK(dists, {11,16}, legends, 'Wrist',evalSpecFd, false, 4)
displayPCK(dists, {12,15}, legends, 'Elbow', evalSpecFd, false, 4)
gnuplot.raw('unset multiplot')

gnuplot.figure(2)
displayPCK(dists,{1,2,5,6,9,10,11,12,13,14,15,16},legends,'total',evalSpecFd,true,4 )

